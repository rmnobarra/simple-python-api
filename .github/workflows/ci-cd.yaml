name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run Tests
        run: python -m unittest test.py
  
  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: rmnobarra/simple-python-api:${{ github.sha }}
   
      - name: Setup Azure CLI
        uses: azure/setup-azure-cli@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Decode kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $GITHUB_WORKSPACE/kubeconfig.yaml
            
      - name: Deploy to Kubernetes
        run: |
          DEPLOYMENT_NAME=simple-python-api
          NAMESPACE=default
          IMAGE_NAME=rmnobarra/simple-python-api:${{ github.sha }}

          if kubectl get deployment $DEPLOYMENT_NAME -n $NAMESPACE; then
              echo "Deployment exists, updating image..."
              kubectl set image deployment/$DEPLOYMENT_NAME $DEPLOYMENT_NAME=$IMAGE_NAME -n $NAMESPACE --record
          else
              echo "Deployment does not exist, applying kubectl apply -f..."
              kubectl apply -f <caminho-do-seu-arquivo-de-deployment>.yaml -n $NAMESPACE
          fi
